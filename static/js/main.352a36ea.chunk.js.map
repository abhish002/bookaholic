{"version":3,"sources":["components/header/header.component.jsx","constants/application.constants.js","components/directory-item/directory-item.component.jsx","components/directory/directory.component.jsx","redux/actions/books.actions.js","constants/action-types.constants.js","pages/homepage.component.jsx","components/book-details/book-details.component.jsx","components/preview-books/preview-books.component.jsx","redux/selectors/books.selector.js","pages/bookspage/bookspage.component.jsx","App.js","serviceWorker.js","redux/reducers/books.reducer.js","redux/reducers/root-reducer.reducer.js","redux/store/store.js","index.js"],"names":["Header","className","to","DirectoryItem","list_id","display_name","list_image","updated","history","match","src","alt","Directory","this","props","getLists","directoryItems","lists","map","key","Component","connect","books","dispatch","fetch","method","withCredentials","then","resp","json","data","type","payload","results","HomePage","BookDetails","age_group","amazon_product_url","author","contributor","created_date","updated_date","description","rank","title","weeks_on_list","href","PreviewBooks","handleMouseEnter","e","bookDetailsRef","current","classList","remove","handleMouseLeave","add","React","createRef","book_image","remainingProps","hideClass","onMouseEnter","onMouseLeave","onTouchStart","ref","onf","hidden","selectLists","state","BooksPage","createSelector","listId","filter","list","parseInt","console","log","params","filteredBooks","book","i","previewBooksList","book_uri","App","exact","path","component","render","Boolean","window","location","hostname","INITIAL_STATE","booksReducer","action","combineReducers","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.352a36ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.styles.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { APPLICATION_TITLE } from '../../constants/application.constants';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className='header'>\r\n      <Link className='header__application-title' to='/'>\r\n        <h1>{APPLICATION_TITLE}</h1>\r\n      </Link>\r\n      <div className='header__nav'>\r\n      <Link to='/'>View lists</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const APPLICATION_TITLE = 'Bookaholic';","import React from 'react';\r\nimport './directory-item.styles.scss';\r\n\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nexport default function DirectoryItem({ list_id, display_name, list_image, updated, history, match }) {\r\n  return (\r\n    <div className='directory-item'>\r\n      <Link to={`/books/${list_id}`}>\r\n        <img className='directory-item__cover-image' src={list_image} alt='' />\r\n      </Link>\r\n      <div className='directory-item__list-details'>\r\n        <span className='directory-item__list-details__list-title'>{display_name}</span>\r\n        <span className='directory-item__list-details__list-updated'>Updated: {updated}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './directory.styles.scss';\r\n\r\nimport DirectoryItem from '../directory-item/directory-item.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getLists } from '../../redux/actions/books.actions';\r\n\r\nclass Directory extends Component {\r\n  componentDidMount() {\r\n    this.props.getLists();\r\n  }\r\n\r\n  render() {\r\n    const directoryItems = this.props.lists.map(lists => {\r\n      const {list_id} = lists;\r\n      return (\r\n        <DirectoryItem key={list_id} {...lists} />\r\n      )\r\n    })\r\n    return (\r\n      <div className='directory'>\r\n        {directoryItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToprops = ({ books: { lists } }) => ({\r\n  lists,\r\n});\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n  getLists: () => dispatch(getLists())\r\n});\r\n\r\nexport default connect(mapStateToprops, mapDispatchToprops)(Directory)\r\n","import { LOAD_LISTS } from '../../constants/action-types.constants';\r\n\r\nexport function getLists() {\r\n  return function (dispatch) {\r\n    const url = \"http://api.nytimes.com/svc/books/v3/lists/overview.json?api-key=Gr4pjpry6mtGAQbzufRmNJBhLqxOA3aY\";\r\n    return fetch(url, {\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        dispatch({\r\n          type: LOAD_LISTS,\r\n          payload: data.results.lists\r\n        })\r\n      });\r\n  }\r\n};","export const LOAD_LISTS = 'LOAD_LISTS';\r\n","import React from 'react';\r\n\r\nimport './homepage.styles.scss';\r\n\r\nimport Directory from '../components/directory/directory.component';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div className='home-page'>\r\n      <Directory />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './book-details.styles.scss';\r\n\r\nexport default function BookDetails({ age_group, amazon_product_url, author, contributor, created_date, updated_date, description, rank, title, weeks_on_list }) {\r\n  return (\r\n    <div className='book-details'>\r\n      <h1>{title}</h1>\r\n      <span><b>Author:</b> {author}</span>\r\n      <span><b>Contributor:</b> {contributor}</span>\r\n      <span><b>Description:</b> {description}</span>\r\n      <span><b>Rank:</b> {rank}</span>\r\n      <span><b>Created Date:</b> {created_date}</span>\r\n      <span><b>Updated Date:</b> {updated_date}</span>\r\n      <span><b>Weeks on list:</b> {weeks_on_list}</span>\r\n      <span><a href={amazon_product_url}>Buy on Amazon</a></span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './preview-books.styles.scss';\r\n\r\nimport BookDetails from '../book-details/book-details.component';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass PreviewBooks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bookDetailsRef = React.createRef();\r\n  }\r\n\r\n  handleMouseEnter = (e) => {\r\n    this.bookDetailsRef.current.classList.remove('hide');\r\n  }\r\n\r\n  handleMouseLeave = (e) => {\r\n    this.bookDetailsRef.current.classList.add('hide');\r\n  }\r\n\r\n  // handleClick = () => {\r\n  //   const { hidden, toggleDetails } = this.props;\r\n  //   toggleDetails();\r\n  //   hidden ?\r\n  //     this.bookDetailsRef.current.classList.add('hide') : this.bookDetailsRef.current.classList.remove('hide');\r\n  // }  \r\n\r\n  render() {\r\n    const { book_image, hideClass, ...remainingProps } = this.props;\r\n    return (\r\n      <div className='preview-books'>\r\n        <div className='preview-books__cover-image_container'>\r\n          <img src={book_image} alt='' className='preview-books__cover-image'\r\n            onMouseEnter={this.handleMouseEnter}\r\n            onMouseLeave={this.handleMouseLeave}\r\n            onTouchStart={this.handleMouseEnter}\r\n          />\r\n        </div>\r\n        <div className={'preview-books__book-details hide'} ref={this.bookDetailsRef} onf>\r\n          <BookDetails {...remainingProps} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToprops = ({ books: { hidden } }) => ({\r\n  hidden,  \r\n});\r\n\r\nexport default connect(mapStateToprops)(PreviewBooks);\r\n\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const selectLists = state => state.lists;\r\n\r\nexport const selectList = createSelector(\r\n    [selectLists],\r\n    (lists, listId) => lists.filter(list => list.list_id === parseInt(listId))\r\n);","import React, { Component } from 'react';\r\nimport './bookspage.styles.scss';\r\n\r\nimport PreviewBooks from '../../components/preview-books/preview-books.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getLists } from '../../redux/actions/books.actions';\r\nimport { selectLists } from '../../redux/selectors/books.selector';\r\n\r\nclass BooksPage extends Component {\r\n    // componentDidMount() {\r\n    //     const { lists, getLists } = this.props;\r\n    //     if (lists.length === 0) {\r\n    //         getLists();\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const { match, lists } = this.props;\r\n        const { listId } = match.params;\r\n\r\n\r\n        console.log(lists)\r\n        const list = lists.filter(list => list.list_id === parseInt(listId));\r\n        console.log(list);\r\n\r\n        const { display_name, books } = list[0] || '';\r\n\r\n        const filteredBooks = books && books.filter((book, i) => i < 4);\r\n\r\n        const previewBooksList = filteredBooks && filteredBooks.map(book => {\r\n            const { book_uri } = book;\r\n            return (\r\n                <PreviewBooks key={book_uri} {...book} />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='books-page'>\r\n                <h1 className='books-page__list-name'>{display_name}</h1>\r\n                {previewBooksList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToprops = ({ books }) => ({\r\n    lists: selectLists(books),\r\n});\r\n\r\n// const mapDispatchToprops = dispatch => ({\r\n//     getLists: () => dispatch(getLists())\r\n// });\r\n\r\nexport default connect(mapStateToprops)(BooksPage);\r\n\r\n","import React from 'react';\nimport './App.css';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage.component';\nimport BooksPage from './pages/bookspage/bookspage.component';\nimport BookDetails from './components/book-details/book-details.component';\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <Header />\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/books/:listId' component={BooksPage} />\n        <Route exact path='/details' render={() => (<BookDetails />)} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOAD_LISTS } from '../../constants/action-types.constants';\r\n\r\nconst INITIAL_STATE = {\r\n    lists: [],\r\n    hidden: true,\r\n    hideClass: 'hide'\r\n};\r\n\r\nconst booksReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOAD_LISTS:\r\n            return {\r\n                ...state,\r\n                lists: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default booksReducer;\r\n\r\n","import { combineReducers } from 'redux';\r\nimport booksReducer from './books.reducer';\r\n\r\nexport default combineReducers({\r\n    books: booksReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from '../reducers/root-reducer.reducer';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    storeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}